# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services: 
  game-api-server:
    env_file:
      - web-variables.env
    build:
      context: .
      target: final
    ports:
      - 80:8080
    networks:
      - game-review-network
    depends_on:
      db:
        condition: service_healthy
  db: #docker exec -it mariadb mariadb -u user -p
    image: mariadb:latest
    environment:
      MYSQL_ROOT_PASSWORD: /run/secrets/db_root_password
      MYSQL_DATABASE: mydatabase
      MYSQL_USER: user
      MYSQL_PASSWORD: /run/secrets/db_password
    volumes:
      - mariadbvolume:/var/lib/mysql
    expose:
      - 3306
    networks:
      - game-review-network
    ports:
      - "3306:3306"
    healthcheck:
      test: [ "CMD", "healthcheck.sh", "--su-mysql", "--connect", "--innodb_initialized" ]
      start_period: 1m
      start_interval: 10s
      interval: 1m
      timeout: 5s
      retries: 3
    secrets:
       - db_root_password
       - db_password

volumes:
  mariadbvolume:

networks:
  game-review-network:
  
secrets:
  db_password:
    file: secrets/db_password.txt
  db_root_password:
    file: secrets/db_root_password.txt

